//
// Created by Jim Pelton on 4/26/16.
//

#include "volume.h"

namespace preproc
{

///////////////////////////////////////////////////////////////////////////////
/// R e g i o n   C l a s s
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
const glm::u64vec3&
Region::block_dims() const
{
  return m_blockDims;
}


///////////////////////////////////////////////////////////////////////////////
glm::u64vec3&
Region::block_dims()
{
  return m_blockDims;
}


///////////////////////////////////////////////////////////////////////////////
void
Region::block_dims(const glm::u64vec3 &dims)
{
  m_blockDims = dims;
}


///////////////////////////////////////////////////////////////////////////////
const glm::u64vec3&
Region::block_count() const
{
  return m_count;
}


///////////////////////////////////////////////////////////////////////////////
void
Region::block_count(const glm::u64vec3 &nb)
{
  m_count = nb;
}


///////////////////////////////////////////////////////////////////////////////
const glm::u64vec3&
Region::vox_start() const
{
  return m_voxStart;
}


///////////////////////////////////////////////////////////////////////////////
void
Region::vox_start(const glm::u64vec3 &m)
{
  m_voxStart = m;
}


///////////////////////////////////////////////////////////////////////////////
/// V o l u m e   C l a s s
///////////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////////
const glm::u64vec3 & Volume::dims() const { return m_volDims; }


///////////////////////////////////////////////////////////////////////////////
void Volume::dims(const glm::u64vec3 &voldims) { m_volDims = voldims; }


///////////////////////////////////////////////////////////////////////////////
double Volume::min() const { return m_volMin; }


///////////////////////////////////////////////////////////////////////////////
void Volume::min(double min) { m_volMin = min; }


///////////////////////////////////////////////////////////////////////////////
double Volume::max() const { return m_volMax; }


///////////////////////////////////////////////////////////////////////////////
void Volume::max(double max) { m_volMax = max; }


///////////////////////////////////////////////////////////////////////////////
double Volume::avg() const { return m_volAvg; }


///////////////////////////////////////////////////////////////////////////////
void Volume::avg(double avg) { m_volAvg = avg; }

const Region&
Volume::lower() const
{
  return m_lowerRegion;
}

Region&
Volume::lower()
{
  return m_lowerRegion;
}

void
Volume::lower(const Region &lower)
{
  m_lowerRegion = lower;
}
} // namespace preproc
